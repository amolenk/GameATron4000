@inject GameCatalog _catalog
@inject ILogger<Game> _logger
@inject ICustomMediator _mediator

<GameScriptView />
<RoomView />

@code {

    private System.Diagnostics.Stopwatch _stopwatch;

    [Parameter]
    public int DiskNumber { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _logger.LogDebug("Loading game manifest...");

            var manifest = await _catalog.TryLoadGameManifest(DiskNumber);
            if (manifest != null)
            {
                _logger.LogDebug("Game manifest loaded.");

                _stopwatch = System.Diagnostics.Stopwatch.StartNew();
                await _mediator.Publish(new GameManifestLoadedEvent(manifest));

                _stopwatch.Stop();
                Console.WriteLine(_stopwatch.ElapsedMilliseconds);

                await _mediator.Send(new StartGameCommand());
            }
        }
    }
}