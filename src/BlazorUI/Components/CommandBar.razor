@inject ICustomMediator _mediator
@implements INotificationHandler<GameObjectPointerOut>
@implements INotificationHandler<GameObjectPointerOver>

<div>
    <p>Command: @_command</p>
</div>

@code {

    private string _verb = string.Empty;
    private string _item = string.Empty;

    private string _command = "";

    public Task Handle(GameObjectPointerOut notification, CancellationToken cancellationToken)
    {
        _command = string.Empty;
        StateHasChanged();
        return Task.CompletedTask;
    }

    public Task Handle(GameObjectPointerOver notification, CancellationToken cancellationToken)
    {
        _command = notification.GameObject.Id;
        StateHasChanged();
        return Task.CompletedTask;
    }

    protected override void OnInitialized()
    {
        _mediator.Subscribe<GameObjectPointerOut>(this);
        _mediator.Subscribe<GameObjectPointerOver>(this);
    }
}